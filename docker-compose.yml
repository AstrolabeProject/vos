version: '3.7'

services:
  redis:
    image: redis:5-alpine
    command: redis-server --requirepass devpassword
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - net
    volumes:
      - redis:/var/lib/redis/data
    ports:
      - '6379:6379'


  pgdb:
    image: astrolabe/vosdb:latest
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - net


  vos:
    image: astrolabe/dals:latest
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - ./images:/vos/images
    ports:
      - "8090:8080"
    networks:
      - net
    depends_on:
      - pgdb


  celery:
    image: cuts:devel
    command: celery worker -l debug -A cuts.blueprints.img.tasks
    deploy:
      restart_policy:
        condition: none
    networks:
      - net
    depends_on:
      - redis


  cuts:
    image: cuts:devel
    deploy:
      restart_policy:
        condition: none
    environment:
      PYTHONUNBUFFERED: 'true'
    networks:
      - net
    volumes:
      - './cuts:/cuts:ro'
      - './images:/vos/images:ro'
    ports:
      - '8000:8000'
    depends_on:
      - celery


  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "9090:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - net


networks:
  net:
    attachable: true

volumes:
  pgdata:
  redis:


  # firefly:
  #   image: ipac/firefly:release-2019.2.1
  #   deploy:
  #     restart_policy:
  #       condition: none
  #   environment:
  #     - DEBUG
  #     - _JAVA_OPTIONS=-Xms512m -Xmx8092m
  #   volumes:
  #     - ./images:/external
  #   ports:
  #     - "8888:8080"
  #   networks:
  #     - net
  #   depends_on:
  #     - pgdb
  #     - vos
